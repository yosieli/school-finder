{"ast":null,"code":"var _jsxFileName = \"/Users/feventsegay/Desktop/final-project/front-end/src/components/favorites.js\";\nimport React from 'react';\nimport Row from \"react-bootstrap/Row\";\nimport FavoriteCards from './favoriteCards';\n\nclass Favorites extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favorites: []\n    };\n\n    this.remove = school => {\n      fetch(\"http://localhost:3000/favoriteSchools/\".concat(localStorage.getItem('user'), \"/\").concat(school.school), {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \".concat(localStorage.getItem('token'))\n        }\n      });\n      let mySchools = this.state.favorites.filter(school => {\n        return school.id !== school.id;\n      });\n      this.setState({\n        favorites: mySchools\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/favoriteSchools/\".concat(localStorage.getItem('user')), {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \".concat(localStorage.getItem('token'))\n      }\n    }).then(res => res.json()).then(data => {\n      console.log('this is data', data);\n      this.setState({\n        favorites: data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.favorites.map(school => {\n      return React.createElement(FavoriteCards, {\n        school: school,\n        remove: this.remove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default Favorites;","map":{"version":3,"sources":["/Users/feventsegay/Desktop/final-project/front-end/src/components/favorites.js"],"names":["React","Row","FavoriteCards","Favorites","Component","state","favorites","remove","school","fetch","localStorage","getItem","method","headers","mySchools","filter","id","setState","componentDidMount","then","res","json","data","console","log","render","map"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEC,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B;AACJC,MAAAA,SAAS,EAAE;AADP,KAF4B;;AAAA,SAuBnCC,MAvBmC,GAuBzBC,MAAD,IAAY;AACfC,MAAAA,KAAK,iDAA0CC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA1C,cAA0EH,MAAM,CAACA,MAAjF,GAA0F;AAC3FI,QAAAA,MAAM,EAAE,QADmF;AAE3FC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,4CAA2BH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA3B;AAFK;AAFkF,OAA1F,CAAL;AAOA,UAAIG,SAAS,GAAG,KAAKT,KAAL,CAAWC,SAAX,CAAqBS,MAArB,CAA4BP,MAAM,IAAI;AAClD,eAAOA,MAAM,CAACQ,EAAP,KAAcR,MAAM,CAACQ,EAA5B;AACH,OAFe,CAAhB;AAGA,WAAKC,QAAL,CAAc;AACVX,QAAAA,SAAS,EAAEQ;AADD,OAAd;AAGN,KArCmC;AAAA;;AAMpCI,EAAAA,iBAAiB,GAAG;AACjBT,IAAAA,KAAK,iDAA0CC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA1C,GAA0E;AAC3EC,MAAAA,MAAM,EAAE,KADmE;AAE3EC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,0CAA2BH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA3B;AAFK;AAFkE,KAA1E,CAAL,CAOCQ,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQEF,IARF,CAQOG,IAAI,IAAG;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,IAA5B;AACA,WAAKL,QAAL,CAAc;AACVX,QAAAA,SAAS,EAAEgB;AADD,OAAd;AAGH,KAbD;AAcF;;AAmBDG,EAAAA,MAAM,GAAG;AAEL,WACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC,KAAKpB,KAAL,CAAWC,SAAX,CAAqBoB,GAArB,CAAyBlB,MAAM,IAAG;AAC/B,aACI,oBAAC,aAAD;AAAe,QAAA,MAAM,EAAIA,MAAzB;AAAkC,QAAA,MAAM,EAAI,KAAKD,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJA,CAFD,CADD;AAUH;;AApDmC;;AAwDxC,eAAeJ,SAAf","sourcesContent":["\nimport React from 'react'\nimport Row from \"react-bootstrap/Row\"\nimport FavoriteCards from './favoriteCards'\n\n class Favorites extends React.Component {\n\n     state = {\n         favorites: []\n     }\n\n     componentDidMount() {\n        fetch(`http://localhost:3000/favoriteSchools/${localStorage.getItem('user')}`, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        })\n        .then(res => res.json())\n         .then(data =>{ \n            console.log('this is data', data)\n            this.setState({\n                favorites: data\n            })\n        })\n     }\n\n      remove = (school) => {\n            fetch(`http://localhost:3000/favoriteSchools/${localStorage.getItem('user')}/${school.school}`,{\n                method: \"DELETE\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}` \n                }\n            })\n            let mySchools = this.state.favorites.filter(school => {\n                return school.id !== school.id\n            })\n            this.setState({\n                favorites: mySchools,\n            })\n     }\n\n\n     render (){\n\n         return(\n          <Row>\n          {/* {console.log('this is favorites',this.state.favorites)} */}\n          {this.state.favorites.map(school =>{\n              return(\n                  <FavoriteCards school = {school}  remove = {this.remove}  />\n              )\n          })}\n          </Row>\n         )\n     }\n }\n\n\n export default Favorites\n"]},"metadata":{},"sourceType":"module"}