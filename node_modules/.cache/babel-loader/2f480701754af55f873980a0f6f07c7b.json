{"ast":null,"code":"var _jsxFileName = \"/Users/feventsegay/Desktop/final-project/front-end/src/components/mapContainer.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport Details from './details';\nimport Button from 'react-bootstrap/Button';\n\nclass MapContainer extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: !this.state.showingInfoWindow\n      });\n    };\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.displayMarkers = () => {\n      return this.state.schools.map((school, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: school.id,\n          position: {\n            lat: school.latitude,\n            lng: school.longitude\n          },\n          onClick: this.onMarkerClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.addToFavorites = school => {\n      console.log('helloo ', school); // e.preventDefault()\n      // fetch(`http://localhost:3000/favorites/${localStorage.getItem('user')}/${school.id}`,{\n      //     method: \"POST\",\n      //     headers: {\n      //         'Content-Type': 'application/json',\n      //         // 'Authorization': `Bearer ${localStorage.getItem('token')}` \n      //     },\n      //     body: JSON.stringify({\n      //         user_id: localStorage.getItem('user'),\n      //         school_id: school.id\n      //     }).then(res => res.json())\n      //     .then(result => {console.log('this is my result', result)})\n      // })\n    };\n\n    this.state = {\n      schools: [{\n        latitude: 29.774787,\n        longitude: -95.380721\n      }, {\n        latitude: 29.763005,\n        longitude: -95.282988\n      }],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n  }\n\n  onInfoWindowOpen(props, e) {\n    const button = React.createElement(Button, {\n      variant: \"outline-success\",\n      onClick: this.props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"mapbutton\");\n    ReactDOM.render(React.Children.only(button), document.getElementById(\"iwc\"));\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/schools', {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        schools: data\n      });\n    });\n  }\n\n  // onInfoWindowOpen =(props, e) => {\n  //     console.log('event is running')\n  // }\n  render() {\n    // this.state.schools && this.state.selectedPlace ? \n    let selectedPlace = this.state.schools.find(school => school.id === this.state.selectedPlace.id) || null || {}; // console.log(selectedPlace)\n\n    console.log('mapContainer loaded');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Map, {\n      google: this.props.google,\n      zoom: 12,\n      style: {\n        width: '100%',\n        height: '100%',\n        topmargin: '10px'\n      },\n      initialCenter: {\n        lat: 29.731589,\n        lng: -95.310856\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.displayMarkers(), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      onOpen: e => {\n        this.onInfoWindowOpen(this.props, e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Details // onClick= {()=>console.log('hello feven')}\n    , {\n      school: selectedPlace // addToFavorites = {this.addToFavorites}\n      // onOpen={()=> console.log('nice')}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"iwc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCGkLGCv3BgUFVYOfNBk5oBmvH6ou-wU8w'\n})(MapContainer);","map":{"version":3,"sources":["/Users/feventsegay/Desktop/final-project/front-end/src/components/mapContainer.js"],"names":["React","ReactDOM","Map","GoogleApiWrapper","Marker","InfoWindow","Details","Button","MapContainer","Component","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","state","onClose","displayMarkers","schools","map","school","index","id","lat","latitude","lng","longitude","addToFavorites","console","log","onInfoWindowOpen","button","render","Children","only","document","getElementById","componentDidMount","fetch","method","headers","then","res","json","data","find","google","width","height","topmargin","apiKey"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Map, GoogleApiWrapper, Marker,InfoWindow} from 'google-maps-react'\nimport Details from './details'\nimport Button from 'react-bootstrap/Button'\n\n\n class MapContainer extends React.Component {\n\n    constructor (props){\n        super(props)\n        this.state = {\n            schools: [{latitude: 29.774787, longitude: -95.380721},\n                     {latitude: 29.763005, longitude: -95.282988}],\n            showingInfoWindow: false,\n            activeMarker: {},\n            selectedPlace: {}\n        }\n    }\n\n\n    onMarkerClick = (props, marker, e) => {\n        this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: !this.state.showingInfoWindow\n        })\n        \n    }\n\n    onInfoWindowOpen(props, e) {\n        const button = (\n        <Button\n            variant=\"outline-success\"\n            onClick={this.props}\n        >\n            mapbutton\n        </Button>\n        )\n        ReactDOM.render(\n        React.Children.only(button),\n        document.getElementById(\"iwc\")\n        );\n    }\n\n    onClose = props => {\n        if (this.state.showingInfoWindow) {\n          this.setState({\n            showingInfoWindow: false,\n            activeMarker: null\n          })\n        }\n    }\n\n\n    \n    componentDidMount(){\n        fetch('http://localhost:3000/schools', {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res=>res.json())\n          .then(data=>{\n            this.setState({\n                schools: data\n            })\n        })\n        \n    }\n\n    \n    displayMarkers = () => {\n        return this.state.schools.map((school, index) => {\n            return <Marker key={index} id={school.id} position={{\n            lat: school.latitude,\n            lng: school.longitude,\n            }}\n            onClick = {this.onMarkerClick}  \n             />\n        })\n    }\n\n\n    addToFavorites = (school) => {\n        console.log ('helloo ', school)\n\n        // e.preventDefault()\n        // fetch(`http://localhost:3000/favorites/${localStorage.getItem('user')}/${school.id}`,{\n        //     method: \"POST\",\n        //     headers: {\n        //         'Content-Type': 'application/json',\n        //         // 'Authorization': `Bearer ${localStorage.getItem('token')}` \n        //     },\n        //     body: JSON.stringify({\n        //         user_id: localStorage.getItem('user'),\n        //         school_id: school.id\n                \n        //     }).then(res => res.json())\n        //     .then(result => {console.log('this is my result', result)})\n        // })\n      \n    }\n    // onInfoWindowOpen =(props, e) => {\n    //     console.log('event is running')\n    // }\n\n    \n\n    render() {\n    // this.state.schools && this.state.selectedPlace ? \n    let selectedPlace = this.state.schools.find(school => school.id === this.state.selectedPlace.id) || null || {}\n    // console.log(selectedPlace)\n    console.log('mapContainer loaded')\n\n        return (\n            <div>\n                <Map \n                    google={this.props.google}\n                    zoom={12}\n                    style={{width: '100%', height: '100%', topmargin: '10px'}}\n                    initialCenter={{ lat: 29.731589, lng: -95.310856}}\n                >\n                    \n                {this.displayMarkers()}\n\n                <InfoWindow \n                    marker={this.state.activeMarker}\n                    visible={this.state.showingInfoWindow}\n                    onClose={this.onClose}\n                    onOpen={e => {\n                    this.onInfoWindowOpen(this.props, e);\n                    }}\n                > \n                   \n\n                        <Details \n                        // onClick= {()=>console.log('hello feven')}\n                        school = {selectedPlace} \n                        // addToFavorites = {this.addToFavorites}\n                        // onOpen={()=> console.log('nice')}\n                        />\n                     <div id=\"iwc\"/>\n\n                </InfoWindow>\n\n                </Map>\n               \n            </div>\n        )\n    }\n}\n\nexport default GoogleApiWrapper ({\n    apiKey: 'AIzaSyCGkLGCv3BgUFVYOfNBk5oBmvH6ou-wU8w'\n  })(MapContainer)\n\n"]},"metadata":{},"sourceType":"module"}