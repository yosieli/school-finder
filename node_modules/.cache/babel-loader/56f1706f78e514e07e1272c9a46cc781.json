{"ast":null,"code":"var _jsxFileName = \"/Users/feventsegay/Desktop/final-project/front-end/src/components/mapContainer.js\";\nimport React from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport Details from './details';\n\nclass MapContainer extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => {\n      console.log(this.state.schools);\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: !this.state.showingInfoWindow\n      });\n      console.log('i am clicked', props.id);\n    };\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.displayMarkers = () => {\n      return this.state.schools.map((school, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: school.id,\n          position: {\n            lat: school.latitude,\n            lng: school.longitude\n          },\n          onClick: this.onMarkerClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.addToFavorite = school => {\n      fetch(\"http://localhost:3000/favorites/\".concat(localStorage.getItem('user'), \"/\").concat(item.id), {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \".concat(localStorage.getItem('token'))\n        },\n        body: JSON.stringify({\n          user_id: localStorage.getItem('user'),\n          item_id: item.id,\n          item_name: item.item_name,\n          description: item.description,\n          price: item.price,\n          image_url: item.image_url\n        })\n      });\n    };\n\n    this.state = {\n      schools: [{\n        latitude: 29.774787,\n        longitude: -95.380721\n      }, {\n        latitude: 29.763005,\n        longitude: -95.282988\n      }],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/schools', {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        schools: data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Map, {\n      google: this.props.google,\n      zoom: 8,\n      style: {\n        width: '100%',\n        height: '100%',\n        topmargin: '10px'\n      },\n      initialCenter: {\n        lat: 29.731589,\n        lng: -95.310856\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.displayMarkers(), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Details, {\n      school: this.state.schools && this.state.selectedPlace ? this.state.schools.find(school => school.id === this.state.selectedPlace.id) || {} : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCGkLGCv3BgUFVYOfNBk5oBmvH6ou-wU8w'\n})(MapContainer);","map":{"version":3,"sources":["/Users/feventsegay/Desktop/final-project/front-end/src/components/mapContainer.js"],"names":["React","Map","GoogleApiWrapper","Marker","InfoWindow","Details","MapContainer","Component","constructor","props","onMarkerClick","marker","e","console","log","state","schools","setState","selectedPlace","activeMarker","showingInfoWindow","id","onClose","displayMarkers","map","school","index","lat","latitude","lng","longitude","addToFavorite","fetch","localStorage","getItem","item","method","headers","body","JSON","stringify","user_id","item_id","item_name","description","price","image_url","componentDidMount","then","res","json","data","render","google","width","height","topmargin","find","apiKey"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Map, GoogleApiWrapper, Marker,InfoWindow} from 'google-maps-react'\nimport Details from './details'\n\n\n class MapContainer extends React.Component {\n\n    constructor (props){\n        super(props)\n        this.state = {\n            schools: [{latitude: 29.774787, longitude: -95.380721},\n                     {latitude: 29.763005, longitude: -95.282988}],\n            showingInfoWindow: false,\n            activeMarker: {},\n            selectedPlace: {}\n        }\n    }\n\n\n    onMarkerClick = (props, marker, e) => {\n        console.log(this.state.schools)\n        this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: !this.state.showingInfoWindow\n        })\n        console.log('i am clicked', props.id)\n        \n        \n\n        \n    }\n\n    onClose = props => {\n        if (this.state.showingInfoWindow) {\n          this.setState({\n            showingInfoWindow: false,\n            activeMarker: null\n          })\n        }\n    }\n\n\n    \n    componentDidMount(){\n        fetch('http://localhost:3000/schools', {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res=>res.json())\n          .then(data=>{\n            this.setState({\n                schools: data\n            })\n        })\n        \n    }\n\n    \n    displayMarkers = () => {\n        return this.state.schools.map((school, index) => {\n            return <Marker key={index} id={school.id} position={{\n            lat: school.latitude,\n            lng: school.longitude,\n            }}\n            onClick = {this.onMarkerClick}   />\n        })\n    }\n\n\n    addToFavorite = (school) => {\n        fetch(`http://localhost:3000/favorites/${localStorage.getItem('user')}/${item.id}`,{\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}` \n            },\n            body: JSON.stringify({\n                user_id: localStorage.getItem('user'),\n                item_id: item.id,\n                item_name: item.item_name,\n                description: item.description,\n                price: item.price,\n                image_url: item.image_url\n            })\n        })\n    }\n\n    \n\n    render() {\n        return (\n            <div>\n                <Map \n                    google={this.props.google}\n                    zoom={8}\n                    style={{width: '100%', height: '100%', topmargin: '10px'}}\n                    initialCenter={{ lat: 29.731589, lng: -95.310856}}\n                >\n                    \n                {this.displayMarkers()}\n\n                <InfoWindow \n                marker={this.state.activeMarker}\n                visible={this.state.showingInfoWindow}\n                onClose={this.onClose}\n\n                > \n                <Details school ={this.state.schools && this.state.selectedPlace ? this.state.schools.find(school=> school.id === this.state.selectedPlace.id) || {} : null}/>\n                </InfoWindow>\n\n                </Map>\n               \n            </div>\n        )\n    }\n}\n\nexport default GoogleApiWrapper ({\n    apiKey: 'AIzaSyCGkLGCv3BgUFVYOfNBk5oBmvH6ou-wU8w'\n  })(MapContainer)\n\n"]},"metadata":{},"sourceType":"module"}