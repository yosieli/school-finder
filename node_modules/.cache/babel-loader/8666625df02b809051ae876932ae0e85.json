{"ast":null,"code":"var _jsxFileName = \"/Users/feventsegay/Desktop/final-project/front-end/src/components/favorites.js\";\nimport React from 'react';\nimport Row from \"react-bootstrap/Row\";\nimport FavoriteCards from './favoriteCards';\n\nclass Favorites extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favorites: []\n    };\n\n    this.remove = school => {\n      fetch(\"http://localhost:3000/favoriteSchools/\".concat(localStorage.getItem('user'), \"/\").concat(school.school_id), {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \".concat(localStorage.getItem('token'))\n        }\n      });\n      let my = this.state.Favorites.filter(items => {\n        return items.id !== item.id;\n      });\n      this.setState({\n        myFavorites: myItems\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/favoriteSchools/\".concat(localStorage.getItem('user')), {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \".concat(localStorage.getItem('token'))\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        favorites: data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.favorites.map(school => {\n      return React.createElement(FavoriteCards, {\n        school: school,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default Favorites;","map":{"version":3,"sources":["/Users/feventsegay/Desktop/final-project/front-end/src/components/favorites.js"],"names":["React","Row","FavoriteCards","Favorites","Component","state","favorites","remove","school","fetch","localStorage","getItem","school_id","method","headers","my","filter","items","id","item","setState","myFavorites","myItems","componentDidMount","then","res","json","data","render","map"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEC,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B;AACJC,MAAAA,SAAS,EAAE;AADP,KAF4B;;AAAA,SAsBnCC,MAtBmC,GAsBzBC,MAAD,IAAY;AACnBC,MAAAA,KAAK,iDAA0CC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA1C,cAA0EH,MAAM,CAACI,SAAjF,GAA6F;AAC9FC,QAAAA,MAAM,EAAE,QADsF;AAE9FC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,4CAA2BJ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA3B;AAFK;AAFqF,OAA7F,CAAL;AAOA,UAAII,EAAE,GAAG,KAAKV,KAAL,CAAWF,SAAX,CAAqBa,MAArB,CAA4BC,KAAK,IAAI;AAC1C,eAAOA,KAAK,CAACC,EAAN,KAAaC,IAAI,CAACD,EAAzB;AACH,OAFQ,CAAT;AAGA,WAAKE,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAEC;AADH,OAAd;AAGH,KApCoC;AAAA;;AAMpCC,EAAAA,iBAAiB,GAAG;AACjBd,IAAAA,KAAK,iDAA0CC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA1C,GAA0E;AAC3EE,MAAAA,MAAM,EAAE,KADmE;AAE3EC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,0CAA2BJ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA3B;AAFK;AAFkE,KAA1E,CAAL,CAOCa,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMG,IAAI,IAAG;AACT,WAAKP,QAAL,CAAc;AACVd,QAAAA,SAAS,EAAEqB;AADD,OAAd;AAGH,KAZD;AAaF;;AAmBDC,EAAAA,MAAM,GAAG;AAEL,WACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKvB,KAAL,CAAWC,SAAX,CAAqBuB,GAArB,CAAyBrB,MAAM,IAAG;AAC/B,aACI,oBAAC,aAAD;AAAe,QAAA,MAAM,EAAIA,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJA,CADD,CADD;AASH;;AAlDmC;;AAsDxC,eAAeL,SAAf","sourcesContent":["\nimport React from 'react'\nimport Row from \"react-bootstrap/Row\"\nimport FavoriteCards from './favoriteCards'\n\n class Favorites extends React.Component {\n\n     state = {\n         favorites: []\n     }\n\n     componentDidMount() {\n        fetch(`http://localhost:3000/favoriteSchools/${localStorage.getItem('user')}`, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        })\n        .then(res => res.json())\n        .then(data =>{ \n            this.setState({\n                favorites: data\n            })\n        })\n     }\n\n      remove = (school) => {\n        fetch(`http://localhost:3000/favoriteSchools/${localStorage.getItem('user')}/${school.school_id}`,{\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}` \n            }\n        })\n        let my = this.state.Favorites.filter(items => {\n            return items.id !== item.id\n        })\n        this.setState({\n            myFavorites: myItems,\n        })\n    }\n\n\n     render (){\n\n         return(\n          <Row>\n          {this.state.favorites.map(school =>{\n              return(\n                  <FavoriteCards school = {school} />\n              )\n          })}\n          </Row>\n         )\n     }\n }\n\n\n export default Favorites\n"]},"metadata":{},"sourceType":"module"}