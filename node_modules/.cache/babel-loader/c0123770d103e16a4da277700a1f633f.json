{"ast":null,"code":"var _jsxFileName = \"/Users/feventsegay/Desktop/final-project/front-end/src/components/mapContainer.js\";\nimport React from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport Details from './details';\n\nclass MapContainer extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => {\n      console.log(this.state.schools);\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: !this.state.showingInfoWindow\n      }); // console.log(props.id)\n\n      let selectedSchool = this.state.schools.filter(school => school.id === props.id); //get your the one school\n\n      return React.createElement(Details, {\n        school: selectedSchool,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    };\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.displayMarkers = () => {\n      return this.state.schools.map((school, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: school.latitude,\n            lng: school.longitude\n          },\n          onClick: this.onMarkerClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.handelShow = () => {//get your the one school\n      // console.log('my schools ',this.state.schools)\n    };\n\n    this.state = {\n      schools: [{\n        latitude: 29.774787,\n        longitude: -95.380721\n      }, {\n        latitude: 29.763005,\n        longitude: -95.282988\n      }],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/schools', {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        schools: data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Map, {\n      google: this.props.google,\n      zoom: 8,\n      style: {\n        width: '100%',\n        height: '100%',\n        topmargin: '10px'\n      },\n      initialCenter: {\n        lat: 29.731589,\n        lng: -95.310856\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.displayMarkers(), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.handelShow())));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCGkLGCv3BgUFVYOfNBk5oBmvH6ou-wU8w'\n})(MapContainer);","map":{"version":3,"sources":["/Users/feventsegay/Desktop/final-project/front-end/src/components/mapContainer.js"],"names":["React","Map","GoogleApiWrapper","Marker","InfoWindow","Details","MapContainer","Component","constructor","props","onMarkerClick","marker","e","console","log","state","schools","setState","selectedPlace","activeMarker","showingInfoWindow","selectedSchool","filter","school","id","onClose","displayMarkers","map","index","lat","latitude","lng","longitude","handelShow","componentDidMount","fetch","method","headers","then","res","json","data","render","google","width","height","topmargin","apiKey"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Map, GoogleApiWrapper, Marker,InfoWindow} from 'google-maps-react'\nimport Details from './details'\n\n\n class MapContainer extends React.Component {\n\n    constructor (props){\n        super(props)\n        this.state = {\n            schools: [{latitude: 29.774787, longitude: -95.380721},\n                     {latitude: 29.763005, longitude: -95.282988}],\n            showingInfoWindow: false,\n            activeMarker: {},\n            selectedPlace: {}\n        }\n    }\n\n\n    onMarkerClick = (props, marker, e) => {\n        console.log(this.state.schools)\n        this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: !this.state.showingInfoWindow\n        })\n        // console.log(props.id)\n        let selectedSchool = this.state.schools.filter(school => school.id === props.id) //get your the one school\n\n            return(\n                <Details school = {selectedSchool}/>\n            )\n\n        \n    }\n\n    onClose = props => {\n        if (this.state.showingInfoWindow) {\n          this.setState({\n            showingInfoWindow: false,\n            activeMarker: null\n          })\n        }\n    }\n\n\n    \n    componentDidMount(){\n        fetch('http://localhost:3000/schools', {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res=>res.json())\n          .then(data=>{\n            this.setState({\n                schools: data\n            })\n        })\n        \n    }\n\n    \n    displayMarkers = () => {\n        return this.state.schools.map((school, index) => {\n            return <Marker key={index} id={index} position={{\n            lat: school.latitude,\n            lng: school.longitude,\n            }}\n            onClick = {this.onMarkerClick}   />\n        })\n    }\n\n    handelShow = () => {\n         //get your the one school\n\n            \n            // console.log('my schools ',this.state.schools)\n       \n        \n    }\n\n    render() {\n        return (\n            <div>\n                <Map \n                    google={this.props.google}\n                    zoom={8}\n                    style={{width: '100%', height: '100%', topmargin: '10px'}}\n                    initialCenter={{ lat: 29.731589, lng: -95.310856}}\n                >\n                    \n                {this.displayMarkers()}\n\n                <InfoWindow \n                marker={this.state.activeMarker}\n                visible={this.state.showingInfoWindow}\n                onClose={this.onClose}\n\n                > \n               {this.handelShow()}\n                </InfoWindow>\n\n                </Map>\n               \n            </div>\n        )\n    }\n}\n\nexport default GoogleApiWrapper ({\n    apiKey: 'AIzaSyCGkLGCv3BgUFVYOfNBk5oBmvH6ou-wU8w'\n  })(MapContainer)\n\n"]},"metadata":{},"sourceType":"module"}