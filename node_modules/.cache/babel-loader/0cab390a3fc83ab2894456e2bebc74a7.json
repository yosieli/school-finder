{"ast":null,"code":"var _jsxFileName = \"/Users/feventsegay/Desktop/final-project/front-end/src/components/mapContainer.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport Details from './details';\n\nclass MapContainer extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: !this.state.showingInfoWindow\n      });\n    };\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.buttonClicked = () => {\n      console.log('clicked');\n    };\n\n    this.displayMarkers = () => {\n      return this.state.schools.map((school, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: school.id,\n          position: {\n            lat: school.latitude,\n            lng: school.longitude\n          },\n          onClick: this.onMarkerClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.addToFavorites = school => {\n      console.log('helloo ', school); // e.preventDefault()\n      // fetch(`http://localhost:3000/favorites/${localStorage.getItem('user')}/${school.id}`,{\n      //     method: \"POST\",\n      //     headers: {\n      //         'Content-Type': 'application/json',\n      //         // 'Authorization': `Bearer ${localStorage.getItem('token')}` \n      //     },\n      //     body: JSON.stringify({\n      //         user_id: localStorage.getItem('user'),\n      //         school_id: school.id\n      //     }).then(res => res.json())\n      //     .then(result => {console.log('this is my result', result)})\n      // })\n    };\n\n    this.state = {\n      schools: [{\n        latitude: 29.774787,\n        longitude: -95.380721\n      }, {\n        latitude: 29.763005,\n        longitude: -95.282988\n      }],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/schools', {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        schools: data\n      });\n    });\n  }\n\n  // onInfoWindowOpen =(props, e) => {\n  //     console.log('event is running')\n  // }\n  onInfoWindowOpen(props, e) {\n    const button = React.createElement(\"button\", {\n      onClick: e => {\n        console.log(\"hmapbuttoni1\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"mapbutton\");\n    console.log(button); // ReactDOM.render(React.Children.only(button), document.getElementById(\"plz\"));\n  }\n\n  render() {\n    // this.state.schools && this.state.selectedPlace ? \n    let selectedPlace = this.state.schools.find(school => school.id === this.state.selectedPlace.id) || null || {}; // console.log(selectedPlace)\n\n    console.log('mapContainer loaded');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Map, {\n      google: this.props.google,\n      zoom: 12,\n      style: {\n        width: '100%',\n        height: '100%',\n        topmargin: '10px'\n      },\n      initialCenter: {\n        lat: 29.731589,\n        lng: -95.310856\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.displayMarkers(), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      onOpen: e => {\n        this.onInfoWindowOpen(this.props, e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Details, {\n      id: \"plz\",\n      onClick: () => console.log('hello feven'),\n      school: selectedPlace // addToFavorites = {this.addToFavorites}\n      // onOpen={()=> console.log('nice')}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCGkLGCv3BgUFVYOfNBk5oBmvH6ou-wU8w'\n})(MapContainer);","map":{"version":3,"sources":["/Users/feventsegay/Desktop/final-project/front-end/src/components/mapContainer.js"],"names":["React","ReactDOM","Map","GoogleApiWrapper","Marker","InfoWindow","Details","MapContainer","Component","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","state","onClose","buttonClicked","console","log","displayMarkers","schools","map","school","index","id","lat","latitude","lng","longitude","addToFavorites","componentDidMount","fetch","method","headers","then","res","json","data","onInfoWindowOpen","button","render","find","google","width","height","topmargin","apiKey"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Map, GoogleApiWrapper, Marker,InfoWindow} from 'google-maps-react'\nimport Details from './details'\n\n\n class MapContainer extends React.Component {\n\n    constructor (props){\n        super(props)\n        this.state = {\n            schools: [{latitude: 29.774787, longitude: -95.380721},\n                     {latitude: 29.763005, longitude: -95.282988}],\n            showingInfoWindow: false,\n            activeMarker: {},\n            selectedPlace: {}\n        }\n    }\n\n\n    onMarkerClick = (props, marker, e) => {\n        this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: !this.state.showingInfoWindow\n        })\n        \n    }\n\n    onClose = props => {\n        if (this.state.showingInfoWindow) {\n          this.setState({\n            showingInfoWindow: false,\n            activeMarker: null\n          })\n        }\n    }\n\n\n    \n    componentDidMount(){\n        fetch('http://localhost:3000/schools', {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res=>res.json())\n          .then(data=>{\n            this.setState({\n                schools: data\n            })\n        })\n        \n    }\n\n    buttonClicked = () => {\n        console.log('clicked')\n    }\n\n    \n    displayMarkers = () => {\n        return this.state.schools.map((school, index) => {\n            return <Marker key={index} id={school.id} position={{\n            lat: school.latitude,\n            lng: school.longitude,\n            }}\n            onClick = {this.onMarkerClick}  \n             />\n        })\n    }\n\n\n    addToFavorites = (school) => {\n        console.log ('helloo ', school)\n\n        // e.preventDefault()\n        // fetch(`http://localhost:3000/favorites/${localStorage.getItem('user')}/${school.id}`,{\n        //     method: \"POST\",\n        //     headers: {\n        //         'Content-Type': 'application/json',\n        //         // 'Authorization': `Bearer ${localStorage.getItem('token')}` \n        //     },\n        //     body: JSON.stringify({\n        //         user_id: localStorage.getItem('user'),\n        //         school_id: school.id\n                \n        //     }).then(res => res.json())\n        //     .then(result => {console.log('this is my result', result)})\n        // })\n      \n    }\n    // onInfoWindowOpen =(props, e) => {\n    //     console.log('event is running')\n    // }\n\n    onInfoWindowOpen(props, e) {\n    const button = (<button onClick={e => {console.log(\"hmapbuttoni1\");}}>mapbutton</button>);\n    console.log(button)\n    // ReactDOM.render(React.Children.only(button), document.getElementById(\"plz\"));\n  }\n\n    render() {\n    // this.state.schools && this.state.selectedPlace ? \n    let selectedPlace = this.state.schools.find(school => school.id === this.state.selectedPlace.id) || null || {}\n    // console.log(selectedPlace)\n    console.log('mapContainer loaded')\n\n        return (\n            <div>\n                <Map \n                    google={this.props.google}\n                    zoom={12}\n                    style={{width: '100%', height: '100%', topmargin: '10px'}}\n                    initialCenter={{ lat: 29.731589, lng: -95.310856}}\n                >\n                    \n                {this.displayMarkers()}\n\n                <InfoWindow \n                marker={this.state.activeMarker}\n                visible={this.state.showingInfoWindow}\n                onClose={this.onClose}\n                onOpen={e => {\n                    this.onInfoWindowOpen(this.props, e);\n                    }}\n                > \n                    <div>\n                        <Details \n                        id = 'plz'\n                        onClick= {()=>console.log('hello feven')}\n                        school = {selectedPlace} \n                        // addToFavorites = {this.addToFavorites}\n                        // onOpen={()=> console.log('nice')}\n                        />\n                       \n                    </div>\n                </InfoWindow>\n\n                </Map>\n               \n            </div>\n        )\n    }\n}\n\nexport default GoogleApiWrapper ({\n    apiKey: 'AIzaSyCGkLGCv3BgUFVYOfNBk5oBmvH6ou-wU8w'\n  })(MapContainer)\n\n"]},"metadata":{},"sourceType":"module"}