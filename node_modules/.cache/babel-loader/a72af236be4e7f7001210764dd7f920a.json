{"ast":null,"code":"var _jsxFileName = \"/Users/feventsegay/Desktop/final-project/front-end/src/components/mapContainer.js\";\nimport React from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport Details from './details';\n\nclass MapContainer extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showinginfoWindow: !this.state.showinginfoWindow\n      });\n    };\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.displayMarkers = () => {\n      return this.state.schools.map((store, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          onClick: () => console.log('clicked'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.state = {\n      schools: [{\n        latitude: 29.774787,\n        longitude: -95.380721\n      }, {\n        latitude: 29.763005,\n        longitude: -95.282988\n      }],\n      showinginfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n  } // handleShow = () => {\n  //     this.setState({\n  //         showup:!this.state.showup\n  //     })\n  // }\n\n\n  componentDidMount() {\n    fetch('http://localhost:3000/schools', {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        schools: data\n      });\n      console.log(data);\n    });\n  }\n\n  // displayInfoWindow = () => {\n  //     <InfoWindow\n  //       marker={this.state.activeMarker}\n  //       visible={this.state.showingInfoWindow}\n  //       onClose={this.onClose}\n  //     ></InfoWindow>\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Map, {\n      google: this.props.google,\n      zoom: 8,\n      style: {\n        width: '50%',\n        height: '50%',\n        topmargin: '10px'\n      },\n      initialCenter: {\n        lat: 29.731589,\n        lng: -95.310856\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showinginfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), this.displayMarkers()), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"hi\"));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCGkLGCv3BgUFVYOfNBk5oBmvH6ou-wU8w'\n})(MapContainer);","map":{"version":3,"sources":["/Users/feventsegay/Desktop/final-project/front-end/src/components/mapContainer.js"],"names":["React","Map","GoogleApiWrapper","Marker","InfoWindow","Details","MapContainer","Component","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showinginfoWindow","state","onClose","showingInfoWindow","displayMarkers","schools","map","store","index","lat","latitude","lng","longitude","console","log","componentDidMount","fetch","method","headers","then","res","json","data","render","google","width","height","topmargin","apiKey"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Map, GoogleApiWrapper, Marker,InfoWindow} from 'google-maps-react'\nimport Details from './details'\n\n\n class MapContainer extends React.Component {\n\n    constructor (props){\n        super(props)\n        this.state = {\n            schools: [{latitude: 29.774787, longitude: -95.380721},\n                     {latitude: 29.763005, longitude: -95.282988}],\n            showinginfoWindow: false,\n            activeMarker: {},\n            selectedPlace: {}\n        }\n    }\n\n    // handleShow = () => {\n    //     this.setState({\n    //         showup:!this.state.showup\n    //     })\n    // }\n\n\n    onMarkerClick = (props, marker, e) => {\n        this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showinginfoWindow: !this.state.showinginfoWindow\n        });\n    }\n\n    onClose = props => {\n        if (this.state.showingInfoWindow) {\n          this.setState({\n            showingInfoWindow: false,\n            activeMarker: null\n          });\n        }\n      };\n\n\n    \n    componentDidMount(){\n        fetch('http://localhost:3000/schools', {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res=>res.json())\n          .then(data=>{\n            this.setState({\n                schools: data\n            })\n            console.log(data)\n        })\n        \n    }\n\n    \n    displayMarkers = () => {\n        return this.state.schools.map((store, index) => {\n            return <Marker key={index} id={index} position={{\n            lat: store.latitude,\n            lng: store.longitude\n            }}\n            onClick={() => console.log('clicked')}    />\n        })\n    }\n\n    // displayInfoWindow = () => {\n    //     <InfoWindow\n    //       marker={this.state.activeMarker}\n    //       visible={this.state.showingInfoWindow}\n    //       onClose={this.onClose}\n    //     ></InfoWindow>\n\n    // }\n\n    \n\n    render() {\n        return (\n            <div>\n                <Map \n                    google={this.props.google}\n                    zoom={8}\n                    style={{width: '50%', height: '50%', topmargin: '10px'}}\n                    initialCenter={{ lat: 29.731589, lng: -95.310856}}\n             >\n\n                <InfoWindow \n                marker={this.state.activeMarker}\n                visible={this.state.showinginfoWindow}\n                onClose={this.onClose}\n                ></InfoWindow>\n\n                {this.displayMarkers()}\n                </Map>\n                {/* {this.state.schools.map(school =>{\n                    return(\n                        <div>\n                            <Details  school = {school} onClick = {this.handleShow}/>\n                        </div>\n                    )\n                })} */}\n                <h1>hi</h1>\n            </div>\n        )\n    }\n}\n\nexport default GoogleApiWrapper ({\n    apiKey: 'AIzaSyCGkLGCv3BgUFVYOfNBk5oBmvH6ou-wU8w'\n  })(MapContainer)\n\n"]},"metadata":{},"sourceType":"module"}